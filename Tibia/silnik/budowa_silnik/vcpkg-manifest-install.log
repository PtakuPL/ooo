Detecting compiler hash for triplet x64-linux...
Compiler found: /usr/bin/c++
The following packages will be built and installed:
    abseil:x64-linux@20250127.0
    argon2:x64-linux@20190702#1
    asio:x64-linux@1.32.0
    atomic-queue:x64-linux@1.6.5
    bext-di:x64-linux@1.3.2
    bext-ut:x64-linux@2.0.1
    bshoshany-thread-pool:x64-linux@5.0.0
  * civetweb:x64-linux@1.16#2
    curl[core,non-http,openssl,ssl]:x64-linux@8.13.0#1
    eventpp:x64-linux@0.1.3#1
  * fmt:x64-linux@11.0.2#1
    gmp:x64-linux@6.3.0#2
    libmariadb[core,openssl,ssl]:x64-linux@3.4.1
    luajit:x64-linux@2023-01-04#6
    magic-enum:x64-linux@0.9.7#1
    mio:x64-linux@2023-03-03
  * nlohmann-json:x64-linux@3.12.0
  * openssl:x64-linux@3.5.0#1
    opentelemetry-cpp[core,otlp-http,prometheus]:x64-linux@1.20.0
    parallel-hashmap:x64-linux@2.0.0
  * prometheus-cpp[compression,core,pull]:x64-linux@1.3.0
    protobuf:x64-linux@5.29.3
    pugixml:x64-linux@1.15
    spdlog:x64-linux@1.15.2
  * utf8-range:x64-linux@5.29.3
  * vcpkg-cmake:x64-linux@2024-04-23
  * vcpkg-cmake-config:x64-linux@2024-05-23
  * vcpkg-cmake-get-vars:x64-linux@2024-09-22
    zlib:x64-linux@1.3.1
Additional packages (*) will be modified to complete this operation.
Restored 29 package(s) from /home/ptaku/.cache/vcpkg/archives in 7.7 s. Use --debug to see more details.
Installing 1/29 vcpkg-cmake-config:x64-linux@2024-05-23...
Elapsed time to handle vcpkg-cmake-config:x64-linux: 1.81 ms
vcpkg-cmake-config:x64-linux package ABI: 5de581f848af4b2e5841534783873fb3150600a6e2065ff0d15d3e525eb0fb4e
Installing 2/29 vcpkg-cmake:x64-linux@2024-04-23...
Elapsed time to handle vcpkg-cmake:x64-linux: 877 us
vcpkg-cmake:x64-linux package ABI: 76d61fa87d37e965e37040a61ea8ce3422c0e04624bd2f47e9e62a334dff24af
Installing 3/29 abseil:x64-linux@20250127.0...
Elapsed time to handle abseil:x64-linux: 45 ms
abseil:x64-linux package ABI: 2d8c555637468e26e7bb68510085706238813f877b77d857765b1b7605841220
Installing 4/29 argon2:x64-linux@20190702#1...
Elapsed time to handle argon2:x64-linux: 2.63 ms
argon2:x64-linux package ABI: 9af70372dd7954566596dde11f9ede839f89d1c33664b484c97d2e96e71af461
Installing 5/29 asio:x64-linux@1.32.0...
Elapsed time to handle asio:x64-linux: 28.3 ms
asio:x64-linux package ABI: 591c632f60cfced22c83db251e897b7a685976fbece433c617a3fbc0ed201fae
Installing 6/29 atomic-queue:x64-linux@1.6.5...
Elapsed time to handle atomic-queue:x64-linux: 2.57 ms
atomic-queue:x64-linux package ABI: ea3a275587a4092263ed6deb799bffde9b12ae016c1a88595744fba41d1ee242
Installing 7/29 bext-di:x64-linux@1.3.2...
Elapsed time to handle bext-di:x64-linux: 5.75 ms
bext-di:x64-linux package ABI: 952f356f4e844b42478d7913788e27a3fa870214312cd0ca45f6287ad6c34fc6
Installing 8/29 bext-ut:x64-linux@2.0.1...
Elapsed time to handle bext-ut:x64-linux: 2.53 ms
bext-ut:x64-linux package ABI: 752eb4ede309a29946372dfcc622806dce9f1aadeb6d133d51a22c858f9fc798
Installing 9/29 bshoshany-thread-pool:x64-linux@5.0.0...
Elapsed time to handle bshoshany-thread-pool:x64-linux: 2.4 ms
bshoshany-thread-pool:x64-linux package ABI: 56fb64e6cc25a53dfde5a82959e628829e1d30a3091f24b0ae3942525f3707aa
Installing 10/29 vcpkg-cmake-get-vars:x64-linux@2024-09-22...
Elapsed time to handle vcpkg-cmake-get-vars:x64-linux: 2.29 ms
vcpkg-cmake-get-vars:x64-linux package ABI: afa594e36990c013f7e47f1e9281f1e13b4be31ddaf5c099f9bcf37206f00c50
Installing 11/29 openssl:x64-linux@3.5.0#1...
Elapsed time to handle openssl:x64-linux: 7.77 ms
openssl:x64-linux package ABI: 83e4ef07f58060f9fce11f0139e6ec398e90337c5c0e1d84e67f829736c8247c
Installing 12/29 zlib:x64-linux@1.3.1...
Elapsed time to handle zlib:x64-linux: 4.77 ms
zlib:x64-linux package ABI: ec446be0e9beea98c0e5e0b8e90fa53855203d26eac7581ba1e82362ca0bfce3
Installing 13/29 curl[core,non-http,openssl,ssl]:x64-linux@8.13.0#1...
Elapsed time to handle curl:x64-linux: 5.4 ms
curl:x64-linux package ABI: 489b6fb09af6bac9896cf494decc8a1ab037b0e3c2b9bebe43a24c7173288452
Installing 14/29 eventpp:x64-linux@0.1.3#1...
Elapsed time to handle eventpp:x64-linux: 4.04 ms
eventpp:x64-linux package ABI: 25447f187d97b12515081e604556fc03a66d85d09319630f95a629a817ccd3df
Installing 15/29 gmp:x64-linux@6.3.0#2...
Elapsed time to handle gmp:x64-linux: 3.37 ms
gmp:x64-linux package ABI: 3cb954df35eaf7b93655350bd9e130d84787d4ef4169769455dd7702d468abc6
Installing 16/29 libmariadb[core,openssl,ssl]:x64-linux@3.4.1...
Elapsed time to handle libmariadb:x64-linux: 14.3 ms
libmariadb:x64-linux package ABI: 454e5b6a5a5d99674a92f9d2c8e1ea8651c537fa284efd6e07d99d50914ead25
Installing 17/29 luajit:x64-linux@2023-01-04#6...
Elapsed time to handle luajit:x64-linux: 6.11 ms
luajit:x64-linux package ABI: 74cd748b034ae6d442df8d9b2660b14c9cf7dcfdb6dbec3a4a2ecacb2ff1b4c6
Installing 18/29 magic-enum:x64-linux@0.9.7#1...
Elapsed time to handle magic-enum:x64-linux: 3.96 ms
magic-enum:x64-linux package ABI: 770b2ac42d86ca31e6be0693c458263e5155ebb626d6e1a7cea66848ded73786
Installing 19/29 mio:x64-linux@2023-03-03...
Elapsed time to handle mio:x64-linux: 3.49 ms
mio:x64-linux package ABI: 160056f94e5556f25e458348b8c0e5def073ae917ad747bad7c28333ae619193
Installing 20/29 civetweb:x64-linux@1.16#2...
Elapsed time to handle civetweb:x64-linux: 3.29 ms
civetweb:x64-linux package ABI: fcffcb4a4468faa7d58dec649b830975b35243919133da822b96c4ea80083cfd
Installing 21/29 prometheus-cpp[compression,core,pull]:x64-linux@1.3.0...
Elapsed time to handle prometheus-cpp:x64-linux: 4.8 ms
prometheus-cpp:x64-linux package ABI: 87b76281c9accdc6cffb2cc205774ff265b138a8808d252d0a5b64f3b8e9c2f9
Installing 22/29 utf8-range:x64-linux@5.29.3...
Elapsed time to handle utf8-range:x64-linux: 4.12 ms
utf8-range:x64-linux package ABI: 4afe5d7b0daa029e88a7547ec7c268be413d62990ac8ef3f68e647d912fcb094
Installing 23/29 protobuf:x64-linux@5.29.3...
Elapsed time to handle protobuf:x64-linux: 18.9 ms
protobuf:x64-linux package ABI: eab245421f2c0b6281755b424b4c03984374376372b4bce47f43616e94b3020b
Installing 24/29 nlohmann-json:x64-linux@3.12.0...
Elapsed time to handle nlohmann-json:x64-linux: 7.56 ms
nlohmann-json:x64-linux package ABI: 94b28e52efcdf2f98345342b1bdaaf7d61e481f3113b2b2304c019f17c0e23ef
Installing 25/29 opentelemetry-cpp[core,otlp-http,prometheus]:x64-linux@1.20.0...
Elapsed time to handle opentelemetry-cpp:x64-linux: 40.6 ms
opentelemetry-cpp:x64-linux package ABI: 17ab8f1941e445fc4bc6e82fe460c3d92ae3c5b518dad4e46e3c27b99e22945e
Installing 26/29 parallel-hashmap:x64-linux@2.0.0...
Elapsed time to handle parallel-hashmap:x64-linux: 4.15 ms
parallel-hashmap:x64-linux package ABI: 7b5e4295279bd4c2e8982300dcd2714db8ec014010d71f8c1fffba85cd830d2b
Installing 27/29 pugixml:x64-linux@1.15...
Elapsed time to handle pugixml:x64-linux: 3.58 ms
pugixml:x64-linux package ABI: f3eb5481bda73b85064e047646e08f567b60c72a7befb7f962d361be2148dceb
Installing 28/29 fmt:x64-linux@11.0.2#1...
Elapsed time to handle fmt:x64-linux: 5.06 ms
fmt:x64-linux package ABI: 0836845943388064dfedac3c7ba173518224a1b80a2426b93f925ebf4729a9f0
Installing 29/29 spdlog:x64-linux@1.15.2...
Elapsed time to handle spdlog:x64-linux: 7.68 ms
spdlog:x64-linux package ABI: df85d07320f774f6ece528e0e83b6db2c352a12f48a162318e38360955d7b3b6
Installed contents are licensed to you by owners. Microsoft is not responsible for, nor does it grant any licenses to, third-party packages.
Some packages did not declare an SPDX license. Check the `copyright` file for each package for more information about their licensing.
Packages installed in this vcpkg installation declare the following licenses:
(Apache-2.0 OR CC0-1.0)
(LGPL-3.0-only OR GPL-2.0-only)
Apache-2.0
BSD-3-Clause
BSL-1.0
ISC
LGPL-2.1-or-later
MIT
Zlib
curl
abseil provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(absl CONFIG REQUIRED)
  # note: 188 additional targets are not displayed.
  target_link_libraries(main PRIVATE absl::any absl::log absl::base absl::bits)

abseil provides pkg-config modules:

  # Abseil absl_check library
  absl_absl_check

  # Abseil absl_log library
  absl_absl_log

  # Abseil absl_vlog_is_on library
  absl_absl_vlog_is_on

  # Abseil algorithm library
  absl_algorithm

  # Abseil algorithm_container library
  absl_algorithm_container

  # Abseil any library
  absl_any

  # Abseil any_invocable library
  absl_any_invocable

  # Abseil atomic_hook library
  absl_atomic_hook

  # Abseil bad_any_cast library
  absl_bad_any_cast

  # Abseil bad_any_cast_impl library
  absl_bad_any_cast_impl

  # Abseil bad_optional_access library
  absl_bad_optional_access

  # Abseil bad_variant_access library
  absl_bad_variant_access

  # Abseil base library
  absl_base

  # Abseil base_internal library
  absl_base_internal

  # Abseil bind_front library
  absl_bind_front

  # Abseil bits library
  absl_bits

  # Abseil bounded_utf8_length_sequence library
  absl_bounded_utf8_length_sequence

  # Abseil btree library
  absl_btree

  # Abseil charset library
  absl_charset

  # Abseil check library
  absl_check

  # Abseil city library
  absl_city

  # Abseil civil_time library
  absl_civil_time

  # Abseil cleanup library
  absl_cleanup

  # Abseil cleanup_internal library
  absl_cleanup_internal

  # Abseil common_policy_traits library
  absl_common_policy_traits

  # Abseil compare library
  absl_compare

  # Abseil compressed_tuple library
  absl_compressed_tuple

  # Abseil config library
  absl_config

  # Abseil container_common library
  absl_container_common

  # Abseil container_memory library
  absl_container_memory

  # Abseil cord library
  absl_cord

  # Abseil cord_internal library
  absl_cord_internal

  # Abseil cordz_functions library
  absl_cordz_functions

  # Abseil cordz_handle library
  absl_cordz_handle

  # Abseil cordz_info library
  absl_cordz_info

  # Abseil cordz_sample_token library
  absl_cordz_sample_token

  # Abseil cordz_statistics library
  absl_cordz_statistics

  # Abseil cordz_update_scope library
  absl_cordz_update_scope

  # Abseil cordz_update_tracker library
  absl_cordz_update_tracker

  # Abseil core_headers library
  absl_core_headers

  # Abseil crc32c library
  absl_crc32c

  # Abseil crc_cord_state library
  absl_crc_cord_state

  # Abseil crc_cpu_detect library
  absl_crc_cpu_detect

  # Abseil crc_internal library
  absl_crc_internal

  # Abseil debugging library
  absl_debugging

  # Abseil debugging_internal library
  absl_debugging_internal

  # Abseil decode_rust_punycode library
  absl_decode_rust_punycode

  # Abseil demangle_internal library
  absl_demangle_internal

  # Abseil demangle_rust library
  absl_demangle_rust

  # Abseil die_if_null library
  absl_die_if_null

  # Abseil dynamic_annotations library
  absl_dynamic_annotations

  # Abseil endian library
  absl_endian

  # Abseil errno_saver library
  absl_errno_saver

  # Abseil examine_stack library
  absl_examine_stack

  # Abseil exponential_biased library
  absl_exponential_biased

  # Abseil failure_signal_handler library
  absl_failure_signal_handler

  # Abseil fast_type_id library
  absl_fast_type_id

  # Abseil fixed_array library
  absl_fixed_array

  # Abseil flags library
  absl_flags

  # Abseil flags_commandlineflag library
  absl_flags_commandlineflag

  # Abseil flags_commandlineflag_internal library
  absl_flags_commandlineflag_internal

  # Abseil flags_config library
  absl_flags_config

  # Abseil flags_internal library
  absl_flags_internal

  # Abseil flags_marshalling library
  absl_flags_marshalling

  # Abseil flags_parse library
  absl_flags_parse

  # Abseil flags_path_util library
  absl_flags_path_util

  # Abseil flags_private_handle_accessor library
  absl_flags_private_handle_accessor

  # Abseil flags_program_name library
  absl_flags_program_name

  # Abseil flags_reflection library
  absl_flags_reflection

  # Abseil flags_usage library
  absl_flags_usage

  # Abseil flags_usage_internal library
  absl_flags_usage_internal

  # Abseil flat_hash_map library
  absl_flat_hash_map

  # Abseil flat_hash_set library
  absl_flat_hash_set

  # Abseil function_ref library
  absl_function_ref

  # Abseil graphcycles_internal library
  absl_graphcycles_internal

  # Abseil has_ostream_operator library
  absl_has_ostream_operator

  # Abseil hash library
  absl_hash

  # Abseil hash_container_defaults library
  absl_hash_container_defaults

  # Abseil hash_function_defaults library
  absl_hash_function_defaults

  # Abseil hash_policy_traits library
  absl_hash_policy_traits

  # Abseil hashtable_debug library
  absl_hashtable_debug

  # Abseil hashtable_debug_hooks library
  absl_hashtable_debug_hooks

  # Abseil hashtablez_sampler library
  absl_hashtablez_sampler

  # Abseil if_constexpr library
  absl_if_constexpr

  # Abseil inlined_vector library
  absl_inlined_vector

  # Abseil inlined_vector_internal library
  absl_inlined_vector_internal

  # Abseil int128 library
  absl_int128

  # Abseil kernel_timeout_internal library
  absl_kernel_timeout_internal

  # Abseil layout library
  absl_layout

  # Abseil leak_check library
  absl_leak_check

  # Abseil log library
  absl_log

  # Abseil log_entry library
  absl_log_entry

  # Abseil log_flags library
  absl_log_flags

  # Abseil log_globals library
  absl_log_globals

  # Abseil log_initialize library
  absl_log_initialize

  # Abseil log_internal_append_truncated library
  absl_log_internal_append_truncated

  # Abseil log_internal_check_impl library
  absl_log_internal_check_impl

  # Abseil log_internal_check_op library
  absl_log_internal_check_op

  # Abseil log_internal_conditions library
  absl_log_internal_conditions

  # Abseil log_internal_config library
  absl_log_internal_config

  # Abseil log_internal_flags library
  absl_log_internal_flags

  # Abseil log_internal_fnmatch library
  absl_log_internal_fnmatch

  # Abseil log_internal_format library
  absl_log_internal_format

  # Abseil log_internal_globals library
  absl_log_internal_globals

  # Abseil log_internal_log_impl library
  absl_log_internal_log_impl

  # Abseil log_internal_log_sink_set library
  absl_log_internal_log_sink_set

  # Abseil log_internal_message library
  absl_log_internal_message

  # Abseil log_internal_nullguard library
  absl_log_internal_nullguard

  # Abseil log_internal_nullstream library
  absl_log_internal_nullstream

  # Abseil log_internal_proto library
  absl_log_internal_proto

  # Abseil log_internal_strip library
  absl_log_internal_strip

  # Abseil log_internal_structured library
  absl_log_internal_structured

  # Abseil log_internal_structured_proto library
  absl_log_internal_structured_proto

  # Abseil log_internal_voidify library
  absl_log_internal_voidify

  # Abseil log_severity library
  absl_log_severity

  # Abseil log_sink library
  absl_log_sink

  # Abseil log_sink_registry library
  absl_log_sink_registry

  # Abseil log_streamer library
  absl_log_streamer

  # Abseil log_structured library
  absl_log_structured

  # Abseil low_level_hash library
  absl_low_level_hash

  # Abseil malloc_internal library
  absl_malloc_internal

  # Abseil memory library
  absl_memory

  # Abseil meta library
  absl_meta

  # Abseil no_destructor library
  absl_no_destructor

  # Abseil node_hash_map library
  absl_node_hash_map

  # Abseil node_hash_set library
  absl_node_hash_set

  # Abseil node_slot_policy library
  absl_node_slot_policy

  # Abseil non_temporal_arm_intrinsics library
  absl_non_temporal_arm_intrinsics

  # Abseil non_temporal_memcpy library
  absl_non_temporal_memcpy

  # Abseil nullability library
  absl_nullability

  # Abseil numeric library
  absl_numeric

  # Abseil numeric_representation library
  absl_numeric_representation

  # Abseil optional library
  absl_optional

  # Abseil overload library
  absl_overload

  # Abseil periodic_sampler library
  absl_periodic_sampler

  # Abseil poison library
  absl_poison

  # Abseil prefetch library
  absl_prefetch

  # Abseil pretty_function library
  absl_pretty_function

  # Abseil random_bit_gen_ref library
  absl_random_bit_gen_ref

  # Abseil random_distributions library
  absl_random_distributions

  # Abseil random_internal_distribution_caller library
  absl_random_internal_distribution_caller

  # Abseil random_internal_distribution_test_util library
  absl_random_internal_distribution_test_util

  # Abseil random_internal_fast_uniform_bits library
  absl_random_internal_fast_uniform_bits

  # Abseil random_internal_fastmath library
  absl_random_internal_fastmath

  # Abseil random_internal_generate_real library
  absl_random_internal_generate_real

  # Abseil random_internal_iostream_state_saver library
  absl_random_internal_iostream_state_saver

  # Abseil random_internal_mock_helpers library
  absl_random_internal_mock_helpers

  # Abseil random_internal_nonsecure_base library
  absl_random_internal_nonsecure_base

  # Abseil random_internal_pcg_engine library
  absl_random_internal_pcg_engine

  # Abseil random_internal_platform library
  absl_random_internal_platform

  # Abseil random_internal_pool_urbg library
  absl_random_internal_pool_urbg

  # Abseil random_internal_randen library
  absl_random_internal_randen

  # Abseil random_internal_randen_engine library
  absl_random_internal_randen_engine

  # Abseil random_internal_randen_hwaes library
  absl_random_internal_randen_hwaes

  # Abseil random_internal_randen_hwaes_impl library
  absl_random_internal_randen_hwaes_impl

  # Abseil random_internal_randen_slow library
  absl_random_internal_randen_slow

  # Abseil random_internal_salted_seed_seq library
  absl_random_internal_salted_seed_seq

  # Abseil random_internal_seed_material library
  absl_random_internal_seed_material

  # Abseil random_internal_traits library
  absl_random_internal_traits

  # Abseil random_internal_uniform_helper library
  absl_random_internal_uniform_helper

  # Abseil random_internal_wide_multiply library
  absl_random_internal_wide_multiply

  # Abseil random_random library
  absl_random_random

  # Abseil random_seed_gen_exception library
  absl_random_seed_gen_exception

  # Abseil random_seed_sequences library
  absl_random_seed_sequences

  # Abseil raw_hash_map library
  absl_raw_hash_map

  # Abseil raw_hash_set library
  absl_raw_hash_set

  # Abseil raw_logging_internal library
  absl_raw_logging_internal

  # Abseil sample_recorder library
  absl_sample_recorder

  # Abseil scoped_set_env library
  absl_scoped_set_env

  # Abseil span library
  absl_span

  # Abseil spinlock_wait library
  absl_spinlock_wait

  # Abseil stacktrace library
  absl_stacktrace

  # Abseil status library
  absl_status

  # Abseil statusor library
  absl_statusor

  # Abseil str_format library
  absl_str_format

  # Abseil str_format_internal library
  absl_str_format_internal

  # Abseil strerror library
  absl_strerror

  # Abseil string_view library
  absl_string_view

  # Abseil strings library
  absl_strings

  # Abseil strings_internal library
  absl_strings_internal

  # Abseil symbolize library
  absl_symbolize

  # Abseil synchronization library
  absl_synchronization

  # Abseil throw_delegate library
  absl_throw_delegate

  # Abseil time library
  absl_time

  # Abseil time_zone library
  absl_time_zone

  # Abseil tracing_internal library
  absl_tracing_internal

  # Abseil type_traits library
  absl_type_traits

  # Abseil utf8_for_code_point library
  absl_utf8_for_code_point

  # Abseil utility library
  absl_utility

  # Abseil variant library
  absl_variant

  # Abseil vlog_config_internal library
  absl_vlog_config_internal

  # Abseil vlog_is_on library
  absl_vlog_is_on

argon2 provides CMake targets:

    find_package(unofficial-argon2 CONFIG REQUIRED)
    target_link_libraries(main PRIVATE unofficial::argon2::libargon2)

asio provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(asio CONFIG REQUIRED)
  target_link_libraries(main PRIVATE asio::asio)

asio provides pkg-config modules:

  # A cross-platform C++ library for network and low-level I/O programming that provides developers with a consistent asynchronous model using a modern C++ approach.
  asio

atomic-queue is header-only and can be used from CMake via:

  find_path(ATOMIC_QUEUE_INCLUDE_DIRS "atomic_queue/atomic_queue.h")
  target_include_directories(main PRIVATE ${ATOMIC_QUEUE_INCLUDE_DIRS})

bext-di is header-only and can be used from CMake via:

  find_path(BEXT_DI_INCLUDE_DIRS "boost/di.hpp")
  target_include_directories(main PRIVATE ${BEXT_DI_INCLUDE_DIRS})

bext-ut provides CMake targets:

find_package(ut CONFIG REQUIRED)
target_link_libraries(main PRIVATE Boost::ut)

bshoshany-thread-pool is header-only and can be used from CMake via:

  find_path(BSHOSHANY_THREAD_POOL_INCLUDE_DIRS "BS_thread_pool.hpp")
  target_include_directories(main PRIVATE ${BSHOSHANY_THREAD_POOL_INCLUDE_DIRS})

The package zlib is compatible with built-in CMake targets:

    find_package(ZLIB REQUIRED)
    target_link_libraries(main PRIVATE ZLIB::ZLIB)

curl is compatible with built-in CMake targets:

    find_package(CURL REQUIRED)
    target_link_libraries(main PRIVATE CURL::libcurl)

eventpp provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(eventpp CONFIG REQUIRED)
  target_link_libraries(main PRIVATE eventpp::eventpp)

The package gmp can be imported via CMake FindPkgConfig module:

    #  gmp
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(gmp REQUIRED IMPORTED_TARGET gmp)
    target_link_libraries(main PkgConfig::gmp)

    # gmpxx
    find_package(PkgConfig REQUIRED)
    pkg_check_modules(gmpxx REQUIRED IMPORTED_TARGET gmpxx)
    target_link_libraries(main PkgConfig::gmpxx)

libmariadb provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(unofficial-libmariadb CONFIG REQUIRED)
  target_link_libraries(main PRIVATE unofficial::libmariadb)

libmariadb provides pkg-config modules:

  # MariaDB Connector/C dynamic library
  libmariadb

luajit provides pkg-config modules:

  # Just-in-time compiler for Lua
  luajit

magic-enum provides CMake targets:

    find_package(magic_enum CONFIG REQUIRED)
    target_link_libraries(main PRIVATE magic_enum::magic_enum)

mio provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(mio CONFIG REQUIRED)
  target_link_libraries(main PRIVATE mio::mio mio::mio-headers)

protobuf provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(protobuf CONFIG REQUIRED)
  target_link_libraries(main PRIVATE protobuf::libprotoc protobuf::libprotobuf protobuf::libprotobuf-lite)

protobuf provides pkg-config modules:

  # Google's Data Interchange Format
  protobuf-lite

  # Google's Data Interchange Format
  protobuf

opentelemetry-cpp provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(opentelemetry-cpp CONFIG REQUIRED)
  # note: 18 additional targets are not displayed.
  target_link_libraries(main PRIVATE opentelemetry-cpp::api opentelemetry-cpp::ext opentelemetry-cpp::sdk opentelemetry-cpp::logs)

opentelemetry-cpp provides pkg-config modules:

  # A header-only library to support instrumentation with OpenTelemetry.
  opentelemetry_api

  # Common components for the OpenTelemetry SDK, a library for exporting telemetry.
  opentelemetry_common

  # Components for exporting logs in the OpenTelemetry SDK.
  opentelemetry_logs

  # Components for exporting metrics in the OpenTelemetry SDK.
  opentelemetry_metrics

  # Components for resource detection in the OpenTelemetry SDK.
  opentelemetry_resources

  # Components for exporting traces in the OpenTelemetry SDK.
  opentelemetry_trace

  # A library exporting version information for OpenTelemetry.
  opentelemetry_version

parallel-hashmap is header-only and can be used from CMake via:

  find_path(PARALLEL_HASHMAP_INCLUDE_DIRS "parallel_hashmap/btree.h")
  target_include_directories(main PRIVATE ${PARALLEL_HASHMAP_INCLUDE_DIRS})

pugixml provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(pugixml CONFIG REQUIRED)
  target_link_libraries(main PRIVATE pugixml::static pugixml::pugixml)

pugixml provides pkg-config modules:

  # Light-weight, simple and fast XML parser for C++ with XPath support.
  pugixml

The package spdlog provides CMake targets:

    find_package(spdlog CONFIG REQUIRED)
    target_link_libraries(main PRIVATE spdlog::spdlog)

    # Or use the header-only version
    find_package(spdlog CONFIG REQUIRED)
    target_link_libraries(main PRIVATE spdlog::spdlog_header_only)

All requested installations completed successfully in: 253 ms
